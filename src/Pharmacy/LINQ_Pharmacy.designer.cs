#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pharmacy
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PharmacyDB")]
	public partial class LINQ_PharmacyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDrug(Drug instance);
    partial void UpdateDrug(Drug instance);
    partial void DeleteDrug(Drug instance);
    partial void InsertPatient_drug_copy(Patient_drug_copy instance);
    partial void UpdatePatient_drug_copy(Patient_drug_copy instance);
    partial void DeletePatient_drug_copy(Patient_drug_copy instance);
    partial void InsertPatient_toiletries_copy(Patient_toiletries_copy instance);
    partial void UpdatePatient_toiletries_copy(Patient_toiletries_copy instance);
    partial void DeletePatient_toiletries_copy(Patient_toiletries_copy instance);
    partial void InsertToiletry(Toiletry instance);
    partial void UpdateToiletry(Toiletry instance);
    partial void DeleteToiletry(Toiletry instance);
    partial void InsertHealth_care_insurance_Co(Health_care_insurance_Co instance);
    partial void UpdateHealth_care_insurance_Co(Health_care_insurance_Co instance);
    partial void DeleteHealth_care_insurance_Co(Health_care_insurance_Co instance);
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    #endregion
		
		public LINQ_PharmacyDataContext() : 
				base(global::Pharmacy.Properties.Settings.Default.PharmacyDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQ_PharmacyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQ_PharmacyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQ_PharmacyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQ_PharmacyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Drug> Drugs
		{
			get
			{
				return this.GetTable<Drug>();
			}
		}
		
		public System.Data.Linq.Table<Patient_drug_copy> Patient_drug_copies
		{
			get
			{
				return this.GetTable<Patient_drug_copy>();
			}
		}
		
		public System.Data.Linq.Table<Patient_toiletries_copy> Patient_toiletries_copies
		{
			get
			{
				return this.GetTable<Patient_toiletries_copy>();
			}
		}
		
		public System.Data.Linq.Table<Toiletry> Toiletries
		{
			get
			{
				return this.GetTable<Toiletry>();
			}
		}
		
		public System.Data.Linq.Table<Health_care_insurance_Co> Health_care_insurance_Cos
		{
			get
			{
				return this.GetTable<Health_care_insurance_Co>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DrugDelete")]
		public int DrugDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DrugEdit")]
		public int DrugEdit(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Abbreviation_Name", DbType="NVarChar(20)")] string abbreviation_Name, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subgroups_Name", DbType="NVarChar(50)")] string subgroups_Name, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Generic_Name_EN", DbType="NVarChar(80)")] string generic_Name_EN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Generic_Name_FA", DbType="NVarChar(80)")] string generic_Name_FA, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Brand_Name_EN", DbType="NVarChar(50)")] string brand_Name_EN, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Brand_Name_FA", DbType="NVarChar(50)")] string brand_Name_FA, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Warning", DbType="NVarChar(1000)")] string warning, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dosage_FA", DbType="NVarChar(50)")] string dosage_FA, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pharmaceutical_Form", DbType="NVarChar(50)")] string pharmaceutical_Form, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Purchase_Price", DbType="Money")] System.Nullable<decimal> purchase_Price, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sale_Price", DbType="Money")] System.Nullable<decimal> sale_Price, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacturer", DbType="NVarChar(50)")] string manufacturer, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Counting_Unit", DbType="Int")] System.Nullable<int> counting_Unit, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count_on_the_Shelf", DbType="Int")] System.Nullable<int> count_on_the_Shelf, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count_in_the_Stock", DbType="Int")] System.Nullable<int> count_in_the_Stock, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Including_insurance", DbType="Bit")] System.Nullable<bool> including_insurance, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Contrasting_drugs_ID_list", DbType="Text")] string contrasting_drugs_ID_list, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Similar_drugs_ID_list", DbType="Text")] string similar_drugs_ID_list)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, abbreviation_Name, subgroups_Name, generic_Name_EN, generic_Name_FA, brand_Name_EN, brand_Name_FA, warning, dosage_FA, pharmaceutical_Form, purchase_Price, sale_Price, manufacturer, counting_Unit, count_on_the_Shelf, count_in_the_Stock, including_insurance, contrasting_drugs_ID_list, similar_drugs_ID_list);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsuranceDelete")]
		public int InsuranceDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Insurance_ID", DbType="Int")] System.Nullable<int> insurance_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), insurance_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Patient_drug_copy_Delete")]
		public int Patient_drug_copy_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Patient_ID", DbType="Int")] System.Nullable<int> patient_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Drug_ID", DbType="Int")] System.Nullable<int> drug_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), patient_ID, drug_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Patient_drug_copy_Edit")]
		public int Patient_drug_copy_Edit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Patient_ID", DbType="Int")] System.Nullable<int> patient_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Drug_ID", DbType="Int")] System.Nullable<int> drug_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total_Price", DbType="Money")] System.Nullable<decimal> total_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Number_Drug", DbType="Int")] System.Nullable<int> number_Drug)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), patient_ID, drug_ID, total_Price, number_Drug);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Patient_toiletries_copy_Delete")]
		public int Patient_toiletries_copy_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Patient_ID", DbType="Int")] System.Nullable<int> patient_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Toiletries_ID", DbType="Int")] System.Nullable<int> toiletries_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), patient_ID, toiletries_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Patient_toiletries_copy_Edit")]
		public int Patient_toiletries_copy_Edit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Patient_ID", DbType="Int")] System.Nullable<int> patient_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Toiletries_ID", DbType="Int")] System.Nullable<int> toiletries_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total_Price", DbType="Money")] System.Nullable<decimal> total_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Number_Toiletries", DbType="Int")] System.Nullable<int> number_Toiletries)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), patient_ID, toiletries_ID, total_Price, number_Toiletries);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PatientDelete")]
		public int PatientDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ToiletriesDelete")]
		public int ToiletriesDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ToiletriesEdit")]
		public int ToiletriesEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Abbreviation_Name", DbType="NVarChar(20)")] string abbreviation_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subgroups_Name", DbType="NVarChar(50)")] string subgroups_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name_EN", DbType="NVarChar(50)")] string name_EN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name_FA", DbType="NVarChar(50)")] string name_FA, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Warning", DbType="NVarChar(1000)")] string warning, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Purchase_Price", DbType="Money")] System.Nullable<decimal> purchase_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sale_Price", DbType="Money")] System.Nullable<decimal> sale_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Manufacturer", DbType="NVarChar(50)")] string manufacturer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Counting_Unit", DbType="Int")] System.Nullable<int> counting_Unit, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count_on_the_Shelf", DbType="Int")] System.Nullable<int> count_on_the_Shelf, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Count_in_the_Stock", DbType="Int")] System.Nullable<int> count_in_the_Stock, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Consumption_Type", DbType="NVarChar(50)")] string consumption_Type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, abbreviation_Name, subgroups_Name, name_EN, name_FA, warning, purchase_Price, sale_Price, manufacturer, counting_Unit, count_on_the_Shelf, count_in_the_Stock, consumption_Type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsuranceEdit")]
		public int InsuranceEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Insurance_ID", DbType="Int")] System.Nullable<int> insurance_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_Name", DbType="NVarChar(100)")] string organization_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Insurance_Type", DbType="NVarChar(50)")] string insurance_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Percent_Reduction", DbType="Int")] System.Nullable<int> percent_Reduction, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="Decimal(18,0)")] System.Nullable<decimal> fax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telephone1", DbType="Decimal(18,0)")] System.Nullable<decimal> telephone1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Telephone2", DbType="Decimal(18,0)")] System.Nullable<decimal> telephone2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(1000)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="Decimal(18,0)")] System.Nullable<decimal> zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Site", DbType="NVarChar(50)")] string site)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), insurance_ID, organization_Name, insurance_Type, percent_Reduction, fax, telephone1, telephone2, email, address, zipCode, site);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PatientEdit")]
		public int PatientEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Insurance_ID", DbType="Int")] System.Nullable<int> insurance_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Health_Insurance_Code", DbType="NVarChar(20)")] string health_Insurance_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Patient_Name", DbType="NVarChar(50)")] string patient_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date_of_copy", DbType="NVarChar(15)")] string date_of_copy, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Copy_Page_Number", DbType="Int")] System.Nullable<int> copy_Page_Number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Doctor_Name", DbType="NVarChar(50)")] string doctor_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Medical_Council_No", DbType="NVarChar(20)")] string medical_Council_No, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total_Sale_Price", DbType="Money")] System.Nullable<decimal> total_Sale_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total_Purchase_Price", DbType="Money")] System.Nullable<decimal> total_Purchase_Price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Portion_insured", DbType="Money")] System.Nullable<decimal> portion_insured, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organizations_Portion", DbType="Money")] System.Nullable<decimal> organizations_Portion)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, insurance_ID, health_Insurance_Code, patient_Name, date_of_copy, copy_Page_Number, doctor_Name, medical_Council_No, total_Sale_Price, total_Purchase_Price, portion_insured, organizations_Portion);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drug")]
	public partial class Drug : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Drug_ID;
		
		private string _Abbreviation_Name;
		
		private string _Subgroups_Name;
		
		private string _Generic_Name_EN;
		
		private string _Generic_Name_FA;
		
		private string _Brand_Name_EN;
		
		private string _Brand_Name_FA;
		
		private string _Warning;
		
		private string _Dosage_FA;
		
		private string _Pharmaceutical_Form;
		
		private System.Nullable<decimal> _Purchase_Price;
		
		private decimal _Sale_Price;
		
		private string _Manufacturer;
		
		private System.Nullable<int> _Counting_Unit;
		
		private int _Count_on_the_Shelf;
		
		private int _Count_in_the_Stock;
		
		private bool _Including_insurance;
		
		private string _Contrasting_drugs_ID_list;
		
		private string _Similar_drugs_ID_list;
		
		private EntitySet<Patient_drug_copy> _Patient_drug_copies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrug_IDChanging(int value);
    partial void OnDrug_IDChanged();
    partial void OnAbbreviation_NameChanging(string value);
    partial void OnAbbreviation_NameChanged();
    partial void OnSubgroups_NameChanging(string value);
    partial void OnSubgroups_NameChanged();
    partial void OnGeneric_Name_ENChanging(string value);
    partial void OnGeneric_Name_ENChanged();
    partial void OnGeneric_Name_FAChanging(string value);
    partial void OnGeneric_Name_FAChanged();
    partial void OnBrand_Name_ENChanging(string value);
    partial void OnBrand_Name_ENChanged();
    partial void OnBrand_Name_FAChanging(string value);
    partial void OnBrand_Name_FAChanged();
    partial void OnWarningChanging(string value);
    partial void OnWarningChanged();
    partial void OnDosage_FAChanging(string value);
    partial void OnDosage_FAChanged();
    partial void OnPharmaceutical_FormChanging(string value);
    partial void OnPharmaceutical_FormChanged();
    partial void OnPurchase_PriceChanging(System.Nullable<decimal> value);
    partial void OnPurchase_PriceChanged();
    partial void OnSale_PriceChanging(decimal value);
    partial void OnSale_PriceChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnCounting_UnitChanging(System.Nullable<int> value);
    partial void OnCounting_UnitChanged();
    partial void OnCount_on_the_ShelfChanging(int value);
    partial void OnCount_on_the_ShelfChanged();
    partial void OnCount_in_the_StockChanging(int value);
    partial void OnCount_in_the_StockChanged();
    partial void OnIncluding_insuranceChanging(bool value);
    partial void OnIncluding_insuranceChanged();
    partial void OnContrasting_drugs_ID_listChanging(string value);
    partial void OnContrasting_drugs_ID_listChanged();
    partial void OnSimilar_drugs_ID_listChanging(string value);
    partial void OnSimilar_drugs_ID_listChanged();
    #endregion
		
		public Drug()
		{
			this._Patient_drug_copies = new EntitySet<Patient_drug_copy>(new Action<Patient_drug_copy>(this.attach_Patient_drug_copies), new Action<Patient_drug_copy>(this.detach_Patient_drug_copies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drug_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Drug_ID
		{
			get
			{
				return this._Drug_ID;
			}
			set
			{
				if ((this._Drug_ID != value))
				{
					this.OnDrug_IDChanging(value);
					this.SendPropertyChanging();
					this._Drug_ID = value;
					this.SendPropertyChanged("Drug_ID");
					this.OnDrug_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation_Name", DbType="NVarChar(20)")]
		public string Abbreviation_Name
		{
			get
			{
				return this._Abbreviation_Name;
			}
			set
			{
				if ((this._Abbreviation_Name != value))
				{
					this.OnAbbreviation_NameChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation_Name = value;
					this.SendPropertyChanged("Abbreviation_Name");
					this.OnAbbreviation_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subgroups_Name", DbType="NVarChar(50)")]
		public string Subgroups_Name
		{
			get
			{
				return this._Subgroups_Name;
			}
			set
			{
				if ((this._Subgroups_Name != value))
				{
					this.OnSubgroups_NameChanging(value);
					this.SendPropertyChanging();
					this._Subgroups_Name = value;
					this.SendPropertyChanged("Subgroups_Name");
					this.OnSubgroups_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Generic_Name_EN", DbType="NVarChar(80)")]
		public string Generic_Name_EN
		{
			get
			{
				return this._Generic_Name_EN;
			}
			set
			{
				if ((this._Generic_Name_EN != value))
				{
					this.OnGeneric_Name_ENChanging(value);
					this.SendPropertyChanging();
					this._Generic_Name_EN = value;
					this.SendPropertyChanged("Generic_Name_EN");
					this.OnGeneric_Name_ENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Generic_Name_FA", DbType="NVarChar(80)")]
		public string Generic_Name_FA
		{
			get
			{
				return this._Generic_Name_FA;
			}
			set
			{
				if ((this._Generic_Name_FA != value))
				{
					this.OnGeneric_Name_FAChanging(value);
					this.SendPropertyChanging();
					this._Generic_Name_FA = value;
					this.SendPropertyChanged("Generic_Name_FA");
					this.OnGeneric_Name_FAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name_EN", DbType="NVarChar(50)")]
		public string Brand_Name_EN
		{
			get
			{
				return this._Brand_Name_EN;
			}
			set
			{
				if ((this._Brand_Name_EN != value))
				{
					this.OnBrand_Name_ENChanging(value);
					this.SendPropertyChanging();
					this._Brand_Name_EN = value;
					this.SendPropertyChanged("Brand_Name_EN");
					this.OnBrand_Name_ENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name_FA", DbType="NVarChar(50)")]
		public string Brand_Name_FA
		{
			get
			{
				return this._Brand_Name_FA;
			}
			set
			{
				if ((this._Brand_Name_FA != value))
				{
					this.OnBrand_Name_FAChanging(value);
					this.SendPropertyChanging();
					this._Brand_Name_FA = value;
					this.SendPropertyChanged("Brand_Name_FA");
					this.OnBrand_Name_FAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warning", DbType="NVarChar(1000)")]
		public string Warning
		{
			get
			{
				return this._Warning;
			}
			set
			{
				if ((this._Warning != value))
				{
					this.OnWarningChanging(value);
					this.SendPropertyChanging();
					this._Warning = value;
					this.SendPropertyChanged("Warning");
					this.OnWarningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dosage_FA", DbType="NVarChar(50)")]
		public string Dosage_FA
		{
			get
			{
				return this._Dosage_FA;
			}
			set
			{
				if ((this._Dosage_FA != value))
				{
					this.OnDosage_FAChanging(value);
					this.SendPropertyChanging();
					this._Dosage_FA = value;
					this.SendPropertyChanged("Dosage_FA");
					this.OnDosage_FAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pharmaceutical_Form", DbType="NVarChar(50)")]
		public string Pharmaceutical_Form
		{
			get
			{
				return this._Pharmaceutical_Form;
			}
			set
			{
				if ((this._Pharmaceutical_Form != value))
				{
					this.OnPharmaceutical_FormChanging(value);
					this.SendPropertyChanging();
					this._Pharmaceutical_Form = value;
					this.SendPropertyChanged("Pharmaceutical_Form");
					this.OnPharmaceutical_FormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purchase_Price", DbType="Money")]
		public System.Nullable<decimal> Purchase_Price
		{
			get
			{
				return this._Purchase_Price;
			}
			set
			{
				if ((this._Purchase_Price != value))
				{
					this.OnPurchase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Purchase_Price = value;
					this.SendPropertyChanged("Purchase_Price");
					this.OnPurchase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Money NOT NULL")]
		public decimal Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counting_Unit", DbType="Int")]
		public System.Nullable<int> Counting_Unit
		{
			get
			{
				return this._Counting_Unit;
			}
			set
			{
				if ((this._Counting_Unit != value))
				{
					this.OnCounting_UnitChanging(value);
					this.SendPropertyChanging();
					this._Counting_Unit = value;
					this.SendPropertyChanged("Counting_Unit");
					this.OnCounting_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_on_the_Shelf", DbType="Int NOT NULL")]
		public int Count_on_the_Shelf
		{
			get
			{
				return this._Count_on_the_Shelf;
			}
			set
			{
				if ((this._Count_on_the_Shelf != value))
				{
					this.OnCount_on_the_ShelfChanging(value);
					this.SendPropertyChanging();
					this._Count_on_the_Shelf = value;
					this.SendPropertyChanged("Count_on_the_Shelf");
					this.OnCount_on_the_ShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_in_the_Stock", DbType="Int NOT NULL")]
		public int Count_in_the_Stock
		{
			get
			{
				return this._Count_in_the_Stock;
			}
			set
			{
				if ((this._Count_in_the_Stock != value))
				{
					this.OnCount_in_the_StockChanging(value);
					this.SendPropertyChanging();
					this._Count_in_the_Stock = value;
					this.SendPropertyChanged("Count_in_the_Stock");
					this.OnCount_in_the_StockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Including_insurance", DbType="Bit NOT NULL")]
		public bool Including_insurance
		{
			get
			{
				return this._Including_insurance;
			}
			set
			{
				if ((this._Including_insurance != value))
				{
					this.OnIncluding_insuranceChanging(value);
					this.SendPropertyChanging();
					this._Including_insurance = value;
					this.SendPropertyChanged("Including_insurance");
					this.OnIncluding_insuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasting_drugs_ID_list", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Contrasting_drugs_ID_list
		{
			get
			{
				return this._Contrasting_drugs_ID_list;
			}
			set
			{
				if ((this._Contrasting_drugs_ID_list != value))
				{
					this.OnContrasting_drugs_ID_listChanging(value);
					this.SendPropertyChanging();
					this._Contrasting_drugs_ID_list = value;
					this.SendPropertyChanged("Contrasting_drugs_ID_list");
					this.OnContrasting_drugs_ID_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Similar_drugs_ID_list", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Similar_drugs_ID_list
		{
			get
			{
				return this._Similar_drugs_ID_list;
			}
			set
			{
				if ((this._Similar_drugs_ID_list != value))
				{
					this.OnSimilar_drugs_ID_listChanging(value);
					this.SendPropertyChanging();
					this._Similar_drugs_ID_list = value;
					this.SendPropertyChanged("Similar_drugs_ID_list");
					this.OnSimilar_drugs_ID_listChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drug_Patient_drug_copy", Storage="_Patient_drug_copies", ThisKey="Drug_ID", OtherKey="Drug_ID")]
		public EntitySet<Patient_drug_copy> Patient_drug_copies
		{
			get
			{
				return this._Patient_drug_copies;
			}
			set
			{
				this._Patient_drug_copies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patient_drug_copies(Patient_drug_copy entity)
		{
			this.SendPropertyChanging();
			entity.Drug = this;
		}
		
		private void detach_Patient_drug_copies(Patient_drug_copy entity)
		{
			this.SendPropertyChanging();
			entity.Drug = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient_drug_copy")]
	public partial class Patient_drug_copy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Patient_ID;
		
		private int _Drug_ID;
		
		private decimal _Total_Price;
		
		private int _Number_Drug;
		
		private EntityRef<Drug> _Drug;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatient_IDChanging(int value);
    partial void OnPatient_IDChanged();
    partial void OnDrug_IDChanging(int value);
    partial void OnDrug_IDChanged();
    partial void OnTotal_PriceChanging(decimal value);
    partial void OnTotal_PriceChanged();
    partial void OnNumber_DrugChanging(int value);
    partial void OnNumber_DrugChanged();
    #endregion
		
		public Patient_drug_copy()
		{
			this._Drug = default(EntityRef<Drug>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Patient_ID
		{
			get
			{
				return this._Patient_ID;
			}
			set
			{
				if ((this._Patient_ID != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatient_IDChanging(value);
					this.SendPropertyChanging();
					this._Patient_ID = value;
					this.SendPropertyChanged("Patient_ID");
					this.OnPatient_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drug_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Drug_ID
		{
			get
			{
				return this._Drug_ID;
			}
			set
			{
				if ((this._Drug_ID != value))
				{
					if (this._Drug.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrug_IDChanging(value);
					this.SendPropertyChanging();
					this._Drug_ID = value;
					this.SendPropertyChanged("Drug_ID");
					this.OnDrug_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Money NOT NULL")]
		public decimal Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_Drug", DbType="Int NOT NULL")]
		public int Number_Drug
		{
			get
			{
				return this._Number_Drug;
			}
			set
			{
				if ((this._Number_Drug != value))
				{
					this.OnNumber_DrugChanging(value);
					this.SendPropertyChanging();
					this._Number_Drug = value;
					this.SendPropertyChanged("Number_Drug");
					this.OnNumber_DrugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drug_Patient_drug_copy", Storage="_Drug", ThisKey="Drug_ID", OtherKey="Drug_ID", IsForeignKey=true)]
		public Drug Drug
		{
			get
			{
				return this._Drug.Entity;
			}
			set
			{
				Drug previousValue = this._Drug.Entity;
				if (((previousValue != value) 
							|| (this._Drug.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drug.Entity = null;
						previousValue.Patient_drug_copies.Remove(this);
					}
					this._Drug.Entity = value;
					if ((value != null))
					{
						value.Patient_drug_copies.Add(this);
						this._Drug_ID = value.Drug_ID;
					}
					else
					{
						this._Drug_ID = default(int);
					}
					this.SendPropertyChanged("Drug");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Patient_drug_copy", Storage="_Patient", ThisKey="Patient_ID", OtherKey="Patient_ID", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Patient_drug_copies.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Patient_drug_copies.Add(this);
						this._Patient_ID = value.Patient_ID;
					}
					else
					{
						this._Patient_ID = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient_toiletries_copy")]
	public partial class Patient_toiletries_copy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Patient_ID;
		
		private int _Toiletries_ID;
		
		private decimal _Total_Price;
		
		private int _Number_Toiletries;
		
		private EntityRef<Toiletry> _Toiletry;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatient_IDChanging(int value);
    partial void OnPatient_IDChanged();
    partial void OnToiletries_IDChanging(int value);
    partial void OnToiletries_IDChanged();
    partial void OnTotal_PriceChanging(decimal value);
    partial void OnTotal_PriceChanged();
    partial void OnNumber_ToiletriesChanging(int value);
    partial void OnNumber_ToiletriesChanged();
    #endregion
		
		public Patient_toiletries_copy()
		{
			this._Toiletry = default(EntityRef<Toiletry>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Patient_ID
		{
			get
			{
				return this._Patient_ID;
			}
			set
			{
				if ((this._Patient_ID != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatient_IDChanging(value);
					this.SendPropertyChanging();
					this._Patient_ID = value;
					this.SendPropertyChanged("Patient_ID");
					this.OnPatient_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Toiletries_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Toiletries_ID
		{
			get
			{
				return this._Toiletries_ID;
			}
			set
			{
				if ((this._Toiletries_ID != value))
				{
					if (this._Toiletry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToiletries_IDChanging(value);
					this.SendPropertyChanging();
					this._Toiletries_ID = value;
					this.SendPropertyChanged("Toiletries_ID");
					this.OnToiletries_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Money NOT NULL")]
		public decimal Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_Toiletries", DbType="Int NOT NULL")]
		public int Number_Toiletries
		{
			get
			{
				return this._Number_Toiletries;
			}
			set
			{
				if ((this._Number_Toiletries != value))
				{
					this.OnNumber_ToiletriesChanging(value);
					this.SendPropertyChanging();
					this._Number_Toiletries = value;
					this.SendPropertyChanged("Number_Toiletries");
					this.OnNumber_ToiletriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Toiletry_Patient_toiletries_copy", Storage="_Toiletry", ThisKey="Toiletries_ID", OtherKey="Toiletries_ID", IsForeignKey=true)]
		public Toiletry Toiletry
		{
			get
			{
				return this._Toiletry.Entity;
			}
			set
			{
				Toiletry previousValue = this._Toiletry.Entity;
				if (((previousValue != value) 
							|| (this._Toiletry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Toiletry.Entity = null;
						previousValue.Patient_toiletries_copies.Remove(this);
					}
					this._Toiletry.Entity = value;
					if ((value != null))
					{
						value.Patient_toiletries_copies.Add(this);
						this._Toiletries_ID = value.Toiletries_ID;
					}
					else
					{
						this._Toiletries_ID = default(int);
					}
					this.SendPropertyChanged("Toiletry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Patient_toiletries_copy", Storage="_Patient", ThisKey="Patient_ID", OtherKey="Patient_ID", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Patient_toiletries_copies.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Patient_toiletries_copies.Add(this);
						this._Patient_ID = value.Patient_ID;
					}
					else
					{
						this._Patient_ID = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Toiletries")]
	public partial class Toiletry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Toiletries_ID;
		
		private string _Abbreviation_Name;
		
		private string _Subgroups_Name;
		
		private string _Name_EN;
		
		private string _Name_FA;
		
		private string _Warning;
		
		private System.Nullable<decimal> _Purchase_Price;
		
		private decimal _Sale_Price;
		
		private string _Manufacturer;
		
		private System.Nullable<int> _Counting_Unit;
		
		private int _Count_on_the_Shelf;
		
		private int _Count_in_the_Stock;
		
		private string _Consumption_Type;
		
		private EntitySet<Patient_toiletries_copy> _Patient_toiletries_copies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnToiletries_IDChanging(int value);
    partial void OnToiletries_IDChanged();
    partial void OnAbbreviation_NameChanging(string value);
    partial void OnAbbreviation_NameChanged();
    partial void OnSubgroups_NameChanging(string value);
    partial void OnSubgroups_NameChanged();
    partial void OnName_ENChanging(string value);
    partial void OnName_ENChanged();
    partial void OnName_FAChanging(string value);
    partial void OnName_FAChanged();
    partial void OnWarningChanging(string value);
    partial void OnWarningChanged();
    partial void OnPurchase_PriceChanging(System.Nullable<decimal> value);
    partial void OnPurchase_PriceChanged();
    partial void OnSale_PriceChanging(decimal value);
    partial void OnSale_PriceChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnCounting_UnitChanging(System.Nullable<int> value);
    partial void OnCounting_UnitChanged();
    partial void OnCount_on_the_ShelfChanging(int value);
    partial void OnCount_on_the_ShelfChanged();
    partial void OnCount_in_the_StockChanging(int value);
    partial void OnCount_in_the_StockChanged();
    partial void OnConsumption_TypeChanging(string value);
    partial void OnConsumption_TypeChanged();
    #endregion
		
		public Toiletry()
		{
			this._Patient_toiletries_copies = new EntitySet<Patient_toiletries_copy>(new Action<Patient_toiletries_copy>(this.attach_Patient_toiletries_copies), new Action<Patient_toiletries_copy>(this.detach_Patient_toiletries_copies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Toiletries_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Toiletries_ID
		{
			get
			{
				return this._Toiletries_ID;
			}
			set
			{
				if ((this._Toiletries_ID != value))
				{
					this.OnToiletries_IDChanging(value);
					this.SendPropertyChanging();
					this._Toiletries_ID = value;
					this.SendPropertyChanged("Toiletries_ID");
					this.OnToiletries_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation_Name", DbType="NVarChar(20)")]
		public string Abbreviation_Name
		{
			get
			{
				return this._Abbreviation_Name;
			}
			set
			{
				if ((this._Abbreviation_Name != value))
				{
					this.OnAbbreviation_NameChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation_Name = value;
					this.SendPropertyChanged("Abbreviation_Name");
					this.OnAbbreviation_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subgroups_Name", DbType="NVarChar(50)")]
		public string Subgroups_Name
		{
			get
			{
				return this._Subgroups_Name;
			}
			set
			{
				if ((this._Subgroups_Name != value))
				{
					this.OnSubgroups_NameChanging(value);
					this.SendPropertyChanging();
					this._Subgroups_Name = value;
					this.SendPropertyChanged("Subgroups_Name");
					this.OnSubgroups_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_EN", DbType="NVarChar(50)")]
		public string Name_EN
		{
			get
			{
				return this._Name_EN;
			}
			set
			{
				if ((this._Name_EN != value))
				{
					this.OnName_ENChanging(value);
					this.SendPropertyChanging();
					this._Name_EN = value;
					this.SendPropertyChanged("Name_EN");
					this.OnName_ENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_FA", DbType="NVarChar(50)")]
		public string Name_FA
		{
			get
			{
				return this._Name_FA;
			}
			set
			{
				if ((this._Name_FA != value))
				{
					this.OnName_FAChanging(value);
					this.SendPropertyChanging();
					this._Name_FA = value;
					this.SendPropertyChanged("Name_FA");
					this.OnName_FAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warning", DbType="NVarChar(1000)")]
		public string Warning
		{
			get
			{
				return this._Warning;
			}
			set
			{
				if ((this._Warning != value))
				{
					this.OnWarningChanging(value);
					this.SendPropertyChanging();
					this._Warning = value;
					this.SendPropertyChanged("Warning");
					this.OnWarningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purchase_Price", DbType="Money")]
		public System.Nullable<decimal> Purchase_Price
		{
			get
			{
				return this._Purchase_Price;
			}
			set
			{
				if ((this._Purchase_Price != value))
				{
					this.OnPurchase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Purchase_Price = value;
					this.SendPropertyChanged("Purchase_Price");
					this.OnPurchase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale_Price", DbType="Money NOT NULL")]
		public decimal Sale_Price
		{
			get
			{
				return this._Sale_Price;
			}
			set
			{
				if ((this._Sale_Price != value))
				{
					this.OnSale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sale_Price = value;
					this.SendPropertyChanged("Sale_Price");
					this.OnSale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Counting_Unit", DbType="Int")]
		public System.Nullable<int> Counting_Unit
		{
			get
			{
				return this._Counting_Unit;
			}
			set
			{
				if ((this._Counting_Unit != value))
				{
					this.OnCounting_UnitChanging(value);
					this.SendPropertyChanging();
					this._Counting_Unit = value;
					this.SendPropertyChanged("Counting_Unit");
					this.OnCounting_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_on_the_Shelf", DbType="Int NOT NULL")]
		public int Count_on_the_Shelf
		{
			get
			{
				return this._Count_on_the_Shelf;
			}
			set
			{
				if ((this._Count_on_the_Shelf != value))
				{
					this.OnCount_on_the_ShelfChanging(value);
					this.SendPropertyChanging();
					this._Count_on_the_Shelf = value;
					this.SendPropertyChanged("Count_on_the_Shelf");
					this.OnCount_on_the_ShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count_in_the_Stock", DbType="Int NOT NULL")]
		public int Count_in_the_Stock
		{
			get
			{
				return this._Count_in_the_Stock;
			}
			set
			{
				if ((this._Count_in_the_Stock != value))
				{
					this.OnCount_in_the_StockChanging(value);
					this.SendPropertyChanging();
					this._Count_in_the_Stock = value;
					this.SendPropertyChanged("Count_in_the_Stock");
					this.OnCount_in_the_StockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consumption_Type", DbType="NVarChar(50)")]
		public string Consumption_Type
		{
			get
			{
				return this._Consumption_Type;
			}
			set
			{
				if ((this._Consumption_Type != value))
				{
					this.OnConsumption_TypeChanging(value);
					this.SendPropertyChanging();
					this._Consumption_Type = value;
					this.SendPropertyChanged("Consumption_Type");
					this.OnConsumption_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Toiletry_Patient_toiletries_copy", Storage="_Patient_toiletries_copies", ThisKey="Toiletries_ID", OtherKey="Toiletries_ID")]
		public EntitySet<Patient_toiletries_copy> Patient_toiletries_copies
		{
			get
			{
				return this._Patient_toiletries_copies;
			}
			set
			{
				this._Patient_toiletries_copies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patient_toiletries_copies(Patient_toiletries_copy entity)
		{
			this.SendPropertyChanging();
			entity.Toiletry = this;
		}
		
		private void detach_Patient_toiletries_copies(Patient_toiletries_copy entity)
		{
			this.SendPropertyChanging();
			entity.Toiletry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Health_care_insurance_Co")]
	public partial class Health_care_insurance_Co : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Insurance_ID;
		
		private string _Organization_Name;
		
		private string _Insurance_Type;
		
		private int _Percent_Reduction;
		
		private System.Nullable<decimal> _Fax;
		
		private System.Nullable<decimal> _Telephone1;
		
		private System.Nullable<decimal> _Telephone2;
		
		private string _Email;
		
		private string _Address;
		
		private System.Nullable<decimal> _ZipCode;
		
		private string _Site;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInsurance_IDChanging(int value);
    partial void OnInsurance_IDChanged();
    partial void OnOrganization_NameChanging(string value);
    partial void OnOrganization_NameChanged();
    partial void OnInsurance_TypeChanging(string value);
    partial void OnInsurance_TypeChanged();
    partial void OnPercent_ReductionChanging(int value);
    partial void OnPercent_ReductionChanged();
    partial void OnFaxChanging(System.Nullable<decimal> value);
    partial void OnFaxChanged();
    partial void OnTelephone1Changing(System.Nullable<decimal> value);
    partial void OnTelephone1Changed();
    partial void OnTelephone2Changing(System.Nullable<decimal> value);
    partial void OnTelephone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipCodeChanging(System.Nullable<decimal> value);
    partial void OnZipCodeChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    #endregion
		
		public Health_care_insurance_Co()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Insurance_ID
		{
			get
			{
				return this._Insurance_ID;
			}
			set
			{
				if ((this._Insurance_ID != value))
				{
					this.OnInsurance_IDChanging(value);
					this.SendPropertyChanging();
					this._Insurance_ID = value;
					this.SendPropertyChanged("Insurance_ID");
					this.OnInsurance_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_Name", DbType="NVarChar(100)")]
		public string Organization_Name
		{
			get
			{
				return this._Organization_Name;
			}
			set
			{
				if ((this._Organization_Name != value))
				{
					this.OnOrganization_NameChanging(value);
					this.SendPropertyChanging();
					this._Organization_Name = value;
					this.SendPropertyChanged("Organization_Name");
					this.OnOrganization_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance_Type", DbType="NVarChar(50)")]
		public string Insurance_Type
		{
			get
			{
				return this._Insurance_Type;
			}
			set
			{
				if ((this._Insurance_Type != value))
				{
					this.OnInsurance_TypeChanging(value);
					this.SendPropertyChanging();
					this._Insurance_Type = value;
					this.SendPropertyChanged("Insurance_Type");
					this.OnInsurance_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percent_Reduction", DbType="Int NOT NULL")]
		public int Percent_Reduction
		{
			get
			{
				return this._Percent_Reduction;
			}
			set
			{
				if ((this._Percent_Reduction != value))
				{
					this.OnPercent_ReductionChanging(value);
					this.SendPropertyChanging();
					this._Percent_Reduction = value;
					this.SendPropertyChanged("Percent_Reduction");
					this.OnPercent_ReductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this.OnTelephone1Changing(value);
					this.SendPropertyChanging();
					this._Telephone1 = value;
					this.SendPropertyChanged("Telephone1");
					this.OnTelephone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="NVarChar(50)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Patient_ID;
		
		private int _Insurance_ID;
		
		private string _Health_Insurance_Code;
		
		private string _Patient_Name;
		
		private string _Date_of_copy;
		
		private System.Nullable<int> _Copy_Page_Number;
		
		private string _Doctor_Name;
		
		private string _Medical_Council_No;
		
		private decimal _Total_Sale_Price;
		
		private decimal _Total_Purchase_Price;
		
		private System.Nullable<decimal> _Portion_insured;
		
		private System.Nullable<decimal> _Organizations_Portion;
		
		private EntitySet<Patient_drug_copy> _Patient_drug_copies;
		
		private EntitySet<Patient_toiletries_copy> _Patient_toiletries_copies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatient_IDChanging(int value);
    partial void OnPatient_IDChanged();
    partial void OnInsurance_IDChanging(int value);
    partial void OnInsurance_IDChanged();
    partial void OnHealth_Insurance_CodeChanging(string value);
    partial void OnHealth_Insurance_CodeChanged();
    partial void OnPatient_NameChanging(string value);
    partial void OnPatient_NameChanged();
    partial void OnDate_of_copyChanging(string value);
    partial void OnDate_of_copyChanged();
    partial void OnCopy_Page_NumberChanging(System.Nullable<int> value);
    partial void OnCopy_Page_NumberChanged();
    partial void OnDoctor_NameChanging(string value);
    partial void OnDoctor_NameChanged();
    partial void OnMedical_Council_NoChanging(string value);
    partial void OnMedical_Council_NoChanged();
    partial void OnTotal_Sale_PriceChanging(decimal value);
    partial void OnTotal_Sale_PriceChanged();
    partial void OnTotal_Purchase_PriceChanging(decimal value);
    partial void OnTotal_Purchase_PriceChanged();
    partial void OnPortion_insuredChanging(System.Nullable<decimal> value);
    partial void OnPortion_insuredChanged();
    partial void OnOrganizations_PortionChanging(System.Nullable<decimal> value);
    partial void OnOrganizations_PortionChanged();
    #endregion
		
		public Patient()
		{
			this._Patient_drug_copies = new EntitySet<Patient_drug_copy>(new Action<Patient_drug_copy>(this.attach_Patient_drug_copies), new Action<Patient_drug_copy>(this.detach_Patient_drug_copies));
			this._Patient_toiletries_copies = new EntitySet<Patient_toiletries_copy>(new Action<Patient_toiletries_copy>(this.attach_Patient_toiletries_copies), new Action<Patient_toiletries_copy>(this.detach_Patient_toiletries_copies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Patient_ID
		{
			get
			{
				return this._Patient_ID;
			}
			set
			{
				if ((this._Patient_ID != value))
				{
					this.OnPatient_IDChanging(value);
					this.SendPropertyChanging();
					this._Patient_ID = value;
					this.SendPropertyChanged("Patient_ID");
					this.OnPatient_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurance_ID", DbType="Int NOT NULL")]
		public int Insurance_ID
		{
			get
			{
				return this._Insurance_ID;
			}
			set
			{
				if ((this._Insurance_ID != value))
				{
					this.OnInsurance_IDChanging(value);
					this.SendPropertyChanging();
					this._Insurance_ID = value;
					this.SendPropertyChanged("Insurance_ID");
					this.OnInsurance_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health_Insurance_Code", DbType="NVarChar(20)")]
		public string Health_Insurance_Code
		{
			get
			{
				return this._Health_Insurance_Code;
			}
			set
			{
				if ((this._Health_Insurance_Code != value))
				{
					this.OnHealth_Insurance_CodeChanging(value);
					this.SendPropertyChanging();
					this._Health_Insurance_Code = value;
					this.SendPropertyChanged("Health_Insurance_Code");
					this.OnHealth_Insurance_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patient_Name", DbType="NVarChar(50)")]
		public string Patient_Name
		{
			get
			{
				return this._Patient_Name;
			}
			set
			{
				if ((this._Patient_Name != value))
				{
					this.OnPatient_NameChanging(value);
					this.SendPropertyChanging();
					this._Patient_Name = value;
					this.SendPropertyChanged("Patient_Name");
					this.OnPatient_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_of_copy", DbType="NVarChar(15)")]
		public string Date_of_copy
		{
			get
			{
				return this._Date_of_copy;
			}
			set
			{
				if ((this._Date_of_copy != value))
				{
					this.OnDate_of_copyChanging(value);
					this.SendPropertyChanging();
					this._Date_of_copy = value;
					this.SendPropertyChanged("Date_of_copy");
					this.OnDate_of_copyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copy_Page_Number", DbType="Int")]
		public System.Nullable<int> Copy_Page_Number
		{
			get
			{
				return this._Copy_Page_Number;
			}
			set
			{
				if ((this._Copy_Page_Number != value))
				{
					this.OnCopy_Page_NumberChanging(value);
					this.SendPropertyChanging();
					this._Copy_Page_Number = value;
					this.SendPropertyChanged("Copy_Page_Number");
					this.OnCopy_Page_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor_Name", DbType="NVarChar(50)")]
		public string Doctor_Name
		{
			get
			{
				return this._Doctor_Name;
			}
			set
			{
				if ((this._Doctor_Name != value))
				{
					this.OnDoctor_NameChanging(value);
					this.SendPropertyChanging();
					this._Doctor_Name = value;
					this.SendPropertyChanged("Doctor_Name");
					this.OnDoctor_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medical_Council_No", DbType="NVarChar(20)")]
		public string Medical_Council_No
		{
			get
			{
				return this._Medical_Council_No;
			}
			set
			{
				if ((this._Medical_Council_No != value))
				{
					this.OnMedical_Council_NoChanging(value);
					this.SendPropertyChanging();
					this._Medical_Council_No = value;
					this.SendPropertyChanged("Medical_Council_No");
					this.OnMedical_Council_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Sale_Price", DbType="Money NOT NULL")]
		public decimal Total_Sale_Price
		{
			get
			{
				return this._Total_Sale_Price;
			}
			set
			{
				if ((this._Total_Sale_Price != value))
				{
					this.OnTotal_Sale_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Sale_Price = value;
					this.SendPropertyChanged("Total_Sale_Price");
					this.OnTotal_Sale_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Purchase_Price", DbType="Money NOT NULL")]
		public decimal Total_Purchase_Price
		{
			get
			{
				return this._Total_Purchase_Price;
			}
			set
			{
				if ((this._Total_Purchase_Price != value))
				{
					this.OnTotal_Purchase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Purchase_Price = value;
					this.SendPropertyChanged("Total_Purchase_Price");
					this.OnTotal_Purchase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portion_insured", DbType="Money")]
		public System.Nullable<decimal> Portion_insured
		{
			get
			{
				return this._Portion_insured;
			}
			set
			{
				if ((this._Portion_insured != value))
				{
					this.OnPortion_insuredChanging(value);
					this.SendPropertyChanging();
					this._Portion_insured = value;
					this.SendPropertyChanged("Portion_insured");
					this.OnPortion_insuredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organizations_Portion", DbType="Money")]
		public System.Nullable<decimal> Organizations_Portion
		{
			get
			{
				return this._Organizations_Portion;
			}
			set
			{
				if ((this._Organizations_Portion != value))
				{
					this.OnOrganizations_PortionChanging(value);
					this.SendPropertyChanging();
					this._Organizations_Portion = value;
					this.SendPropertyChanged("Organizations_Portion");
					this.OnOrganizations_PortionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Patient_drug_copy", Storage="_Patient_drug_copies", ThisKey="Patient_ID", OtherKey="Patient_ID")]
		public EntitySet<Patient_drug_copy> Patient_drug_copies
		{
			get
			{
				return this._Patient_drug_copies;
			}
			set
			{
				this._Patient_drug_copies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Patient_toiletries_copy", Storage="_Patient_toiletries_copies", ThisKey="Patient_ID", OtherKey="Patient_ID")]
		public EntitySet<Patient_toiletries_copy> Patient_toiletries_copies
		{
			get
			{
				return this._Patient_toiletries_copies;
			}
			set
			{
				this._Patient_toiletries_copies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Patient_drug_copies(Patient_drug_copy entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Patient_drug_copies(Patient_drug_copy entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_Patient_toiletries_copies(Patient_toiletries_copy entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Patient_toiletries_copies(Patient_toiletries_copy entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
	}
}
#pragma warning restore 1591
